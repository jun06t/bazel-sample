// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/zipcode.proto

package user

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ZipCode struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZipCode) Reset()         { *m = ZipCode{} }
func (m *ZipCode) String() string { return proto.CompactTextString(m) }
func (*ZipCode) ProtoMessage()    {}
func (*ZipCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d3a0f6878e5ba1d, []int{0}
}
func (m *ZipCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZipCode.Unmarshal(m, b)
}
func (m *ZipCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZipCode.Marshal(b, m, deterministic)
}
func (m *ZipCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZipCode.Merge(m, src)
}
func (m *ZipCode) XXX_Size() int {
	return xxx_messageInfo_ZipCode.Size(m)
}
func (m *ZipCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ZipCode.DiscardUnknown(m)
}

var xxx_messageInfo_ZipCode proto.InternalMessageInfo

func (m *ZipCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func init() {
	proto.RegisterType((*ZipCode)(nil), "user.ZipCode")
}

func init() { proto.RegisterFile("proto/zipcode.proto", fileDescriptor_1d3a0f6878e5ba1d) }

var fileDescriptor_1d3a0f6878e5ba1d = []byte{
	// 124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xaf, 0xca, 0x2c, 0x48, 0xce, 0x4f, 0x49, 0xd5, 0x03, 0xf3, 0x84, 0x58, 0x4a, 0x8b,
	0x53, 0x8b, 0x94, 0x64, 0xb9, 0xd8, 0xa3, 0x32, 0x0b, 0x9c, 0xf3, 0x53, 0x52, 0x85, 0x84, 0xb8,
	0x58, 0x40, 0xd2, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x93, 0x69, 0x94, 0x71,
	0x7a, 0x66, 0x49, 0x46, 0x69, 0x92, 0x5e, 0x72, 0x7e, 0xae, 0x7e, 0x56, 0x69, 0x9e, 0x81, 0x59,
	0x89, 0x7e, 0x52, 0x62, 0x55, 0x6a, 0x8e, 0x6e, 0x71, 0x62, 0x6e, 0x41, 0x4e, 0xaa, 0x7e, 0x7a,
	0x7e, 0x7a, 0x3e, 0xc4, 0x78, 0x30, 0x69, 0x0d, 0x32, 0x35, 0x89, 0x0d, 0xcc, 0x36, 0x06, 0x04,
	0x00, 0x00, 0xff, 0xff, 0xa8, 0x1e, 0x63, 0x02, 0x79, 0x00, 0x00, 0x00,
}
